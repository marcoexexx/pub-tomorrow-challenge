version: '3.8'

services:
  app:
    image: marcoexexx/tomorrow-challenge-api-app:0.1.0
    ports:
      - 8000
    networks:
      - tomorrow-challenge-api-network
    depends_on:
      - redis
    env_file:
      - ./.production.env
    deploy:
      replicas: 5
      update_config:
        parallelism: 1
        delay: 10s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: >
      bash -c "node dist/src/server.js"

  redis:
    image: redis:latest
    container_name: tomorrow-challenge-api-redis
    env_file:
      - ./.production.env
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - 6379
    volumes:
      - cache:/data
    networks:
      - tomorrow-challenge-api-network
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - tomorrow-challenge-api-network

volumes:
  cache:

networks:
  tomorrow-challenge-api-network:
    driver: bridge
